services:
  jd-db:
    image: postgres:14-alpine
    profiles: ["default"]
    ports:
      - "5443:5432"
    volumes:
      - ./docker-entrypoint-initdb/jd-db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    networks:
      - db
    restart: unless-stopped

  jd:
    image: ${JD_IMAGE}:${JD_VERSION}
    depends_on:
      - jd-db
    profiles: ["default"]
    ports:
      - ${PORT}:${PORT}
      - ${OTEL_METRIC_PORT}:${OTEL_METRIC_PORT}
    volumes:
      - ../:/app # Bind mount the Job Distributor root dir to /app
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      PORT: ${PORT}
      DATABASE_URL: postgresql://${PG_USER}:${PG_PASSWORD}@jd-db:5432/jd-db?sslmode=disable
      SERVER_ENABLE_REFLECTION: ${SERVER_ENABLE_REFLECTION}
      TLS_ENABLED: ${TLS_ENABLED}
      TLS_CA_CERT_PATH: ${TLS_CA_CERT_PATH}
      TLS_CERT_PATH: ${TLS_CERT_PATH}
      TLS_KEY_PATH: ${TLS_KEY_PATH}
      OTEL_ENABLED: ${OTEL_ENABLED}
      OTEL_TRACING_HOST: ${OTEL_TRACING_HOST}
      OTEL_TRACING_PORT: ${OTEL_TRACING_PORT}
      OTEL_METRIC_PORT: ${OTEL_METRIC_PORT}
      NODE_RPC_PORT: ${NODE_RPC_PORT}
      NODE_RPC_HEALTH_PORT: ${NODE_RPC_HEALTH_PORT}
      CSA_KEY_ENCRYPTION_SECRET: ${CSA_KEY_ENCRYPTION_SECRET}
    networks:
      - db
      - jd
    restart: on-failure
    stdin_open: true
    tty: true

  # Database for the Chainlink node
  cl-node-db:
    image: postgres:14-alpine
    profiles:
      ["chainlink-nodes", "node-1", "node-2", "node-3", "node-4", "node-5"]
    ports:
      - "5435:5432"
    volumes:
      - ./docker-entrypoint-initdb/cl-node-db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    networks:
      - cl-backend
    restart: unless-stopped

  # Chainlink node 1
  cl-node-1:
    image: "${CL_NODE_IMAGE}:${CL_NODE_VERSION}"
    platform: "${CL_NODE_PLATFORM}"
    profiles: [ "chainlink-nodes", "node-1" ]
    command: >
      --config /run/secrets/cl-node-config 
      --secrets /run/secrets/cl-node-secrets 
      node start 
      --api /run/secrets/cl-node-api-credentials-file
    ports:
      - "6688:6688"
    depends_on:
      - cl-node-db
    environment:
      CL_DATABASE_URL: "postgresql://${PG_USER}:${PG_PASSWORD}@cl-node-db:5432/cl-node-1?sslmode=disable"
    secrets:
      - cl-node-api-credentials-file
      - cl-node-config
      - cl-node-secrets
    networks:
      - cl-backend
    restart: on-failure

  # Chainlink node 2
  cl-node-2:
    image: "${CL_NODE_IMAGE}:${CL_NODE_VERSION}"
    platform: "${CL_NODE_PLATFORM}"
    profiles: [ "chainlink-nodes", "node-2" ]
    command: >
      --config /run/secrets/cl-node-config
      --secrets /run/secrets/cl-node-secrets 
      node start 
      --api /run/secrets/cl-node-api-credentials-file
    ports:
      - "6689:6688"
    depends_on:
      - cl-node-db
    environment:
      CL_DATABASE_URL: "postgresql://${PG_USER}:${PG_PASSWORD}@cl-node-db:5432/cl-node-2?sslmode=disable"
    secrets:
      - cl-node-api-credentials-file
      - cl-node-config
      - cl-node-secrets
    networks:
      - cl-backend
    restart: on-failure

  # Chainlink node 3
  cl-node-3:
    image: "${CL_NODE_IMAGE}:${CL_NODE_VERSION}"
    platform: "${CL_NODE_PLATFORM}"
    profiles: [ "chainlink-nodes", "node-3" ]
    command: >
      --config /run/secrets/cl-node-config 
      --secrets /run/secrets/cl-node-secrets 
      node start 
      --api /run/secrets/cl-node-api-credentials-file
    ports:
      - "6690:6688"
    depends_on:
      - cl-node-db
    environment:
      CL_DATABASE_URL: "postgresql://${PG_USER}:${PG_PASSWORD}@cl-node-db:5432/cl-node-3?sslmode=disable"
    secrets:
      - cl-node-api-credentials-file
      - cl-node-config
      - cl-node-secrets
    networks:
      - cl-backend
    restart: on-failure

  # Chainlink node 4
  cl-node-4:
    image: "${CL_NODE_IMAGE}:${CL_NODE_VERSION}"
    platform: "${CL_NODE_PLATFORM}"
    profiles: [ "chainlink-nodes", "node-4" ]
    command: >
      --config /run/secrets/cl-node-config 
      --secrets /run/secrets/cl-node-secrets 
      node start 
      --api /run/secrets/cl-node-api-credentials-file
    ports:
      - "6691:6688"
    depends_on:
      - cl-node-db
    environment:
      CL_DATABASE_URL: "postgresql://${PG_USER}:${PG_PASSWORD}@cl-node-db:5432/cl-node-4?sslmode=disable"
    secrets:
      - cl-node-api-credentials-file
      - cl-node-config
      - cl-node-secrets
    networks:
      - cl-backend
    restart: on-failure

  # Chainlink node 5
  cl-node-5:
    image: "${CL_NODE_IMAGE}:${CL_NODE_VERSION}"
    platform: "${CL_NODE_PLATFORM}"
    profiles: [ "chainlink-nodes", "node-5" ]
    command: >
      --config /run/secrets/cl-node-config
      --secrets /run/secrets/cl-node-secrets 
      node start 
      --api /run/secrets/cl-node-api-credentials-file
    ports:
      - "6692:6688"
    depends_on:
      - cl-node-db
    environment:
      CL_DATABASE_URL: "postgresql://${PG_USER}:${PG_PASSWORD}@cl-node-db:5432/cl-node-5?sslmode=disable"
    secrets:
      - cl-node-api-credentials-file
      - cl-node-config
      - cl-node-secrets
    networks:
      - cl-backend
    restart: on-failure

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.56.0
    profiles: ["otel"]
    ports:
      - "4317:4317" # Collector gRPC
      - "16686:16686" # Web HTTP
    networks:
      - jd
      - otel


  geth_1337:
    profiles: ["geth"]
    image: ethereum/client-go:stable
    entrypoint: ["/bin/sh", "-c", "/entrypoint.sh 1337"]
    ports:
      - "8545:8545"
      - "8546:8546"
      - "8551:8551"
      - "30303:30303"
    volumes:
      - ./geth/data-temp_1337:/data-temp/
      - ./geth/entrypoint.sh:/entrypoint.sh
    networks:
      - geth

  geth_2337:
    profiles: ["geth"]
    image: ethereum/client-go:stable
    entrypoint: ["/bin/sh", "-c", "/entrypoint.sh 2337"]
    ports:
      - "8555:8545"
      - "8556:8546"
      - "8561:8551"
      - "30304:30303"
    volumes:
      - ./geth/data-temp_2337:/data-temp/
      - ./geth/entrypoint.sh:/entrypoint.sh
    networks:
      - geth

networks:
  db:
    name: db
    driver: bridge
  jd:
    name: jd
    driver: bridge
  otel:
    name: otel
    driver: bridge
  cl-backend:
    name: cl-backend
    driver: bridge
  geth:
    name: geth
    driver: bridge

secrets:
  # Text file holding the API email and password, each on a line
  cl-node-api-credentials-file:
    file: ./secrets/chainlink-node-api-credentials

  # TOML file containing the node's configuration
  cl-node-config:
    file: ./secrets/chainlink-node-config.toml

  # TOML file containing the node's secrets
  cl-node-secrets:
    file: ./secrets/chainlink-node-secrets.toml
