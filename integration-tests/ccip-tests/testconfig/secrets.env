# An example template that you can use for your own .env file for integration test settings
# `source ./secrets.env`

## these are only secrets, please do not commit this file to git
## please use the following command to ignore this file from git
## `git update-index --skip-worktree secrets.env`

## if you want to run the test on a k8 pod, the following test image will be used to run the test
export ENV_JOB_IMAGE="***.dkr.ecr.***.amazonaws.com/chainlink-ccip-tests:latest" # link to pull image from which contains ccip codebase

########## Chainlink Secrets ##########
export CHAINLINK_IMAGE="***.dkr.ecr.***.amazonaws.com/chainlink-ccip" # link to pull chainlink image from which contains ccip codebase
export CHAINLINK_VERSION="****" # Version of the chainlink-ccip image to pull

########## Network Secrets ##########

# General private values that will be retrieved when running on non-simulated networks
export EVM_KEYS="private keys for funding wallet to run test"

# Specific private values for urls and keys when running on specified chains
# Goerli
export GOERLI_URLS="<wss for goerli network>"
export GOERLI_HTTP_URLS="<http for goerli network>"
export GOERLI_KEYS="<private keys for funding wallet in goerli>" # optional if you want to use EVM_KEYS for the goerli network

# Sepolia
export SEPOLIA_URLS="<wss for sepolia network>"
export SEPOLIA_HTTP_URLS="<http for sepolia network>"
export SEPOLIA_KEYS="<private keys for funding wallet in sepolia>" # optional if you want to use EVM_KEYS for the sepolia network

# Arbitrum Goerli
export ARBITRUM_GOERLI_URLS="<wss for arbitrum network>"
export ARBITRUM_GOERLI_HTTP_URLS="<http for arbitrum network>"
export ARBITRUM_GOERLI_KEYS="<private keys for funding wallet in arbitrum goerli>" # optional if you want to use EVM_KEYS for the arbitrum network

# Optimism Goerli
export OPTIMISM_GOERLI_URLS="<wss for optimism network>"
export OPTIMISM_GOERLI_HTTP_URLS="<http for optimism network>"
export OPTIMISM_GOERLI_KEYS="<private keys for funding wallet in Optimism goerli>" # optional if you want to use EVM_KEYS for the Optimism network

# Avalanche Fuji
export AVALANCHE_FUJI_URLS="wss://avalanche.io/ws/"
export AVALANCHE_FUJI_HTTP_URLS="http://avalanche.io/ws/"
export AVALANCHE_FUJI_KEYS="<private keys for funding wallet in Avalanche Fuji>" # optional if you want to use EVM_KEYS for the Avalanche Fuji network

# Polygon Testnet
export MUMBAI_URLS="<wss for mumbai network>"
export MUMBAI_HTTP_URLS="<http for mumbai network>"
export MUMBAI_KEYS="<private keys for funding wallet in mumbai>" # optional if you want to use EVM_KEYS for the Polygon Testnet network

# Base Goerli
export BASE_GOERLI_URLS="<wss for base goerli network>"
export BASE_GOERLI_HTTP_URLS="<wss for base goerli network>"
export BASE_GOERLI_KEYS="<private keys for funding wallet in base goerli>" # optional if you want to use EVM_KEYS for the base goerli network

# Binance Testnet
export BSC_TESTNET_URLS="<wss for binance testnet network>"
export BSC_TESTNET_HTTP_URLS="<http for binance testnet network>"
export BSC_TESTNET_KEYS="<private keys for funding wallet in binance testnet>" # optional if you want to use EVM_KEYS for the binance testnet network


# Ethereum Mainnet
export ETHEREUM_MAINNET_URLS="<wss for ethereum mainnet network>"
export ETHEREUM_MAINNET_HTTP_URLS="<http for ethereum mainnet network>"
export ETHEREUM_MAINNET_KEYS="<private keys for funding wallet in Ethereum mainnet>" # optional if you want to use EVM_KEYS for the Ethereum Mainnet network

# Avalanche Mainnet
export AVALANCHE_MAINNET_URLS="<wss for avalanche mainnet network>"
export AVALANCHE_MAINNET_HTTP_URLS="<http for avalanche mainnet network>"
export AVALANCHE_MAINNET_KEYS="<private keys for funding wallet in avalanche mainnet>" # optional if you want to use EVM_KEYS for the Avalanche Mainnet network

# Arbitrum Mainnet
export ARBITRUM_MAINNET_URLS="<wss for arbitrum mainnet network>"
export ARBITRUM_MAINNET_HTTP_URLS="<http for arbitrum mainnet network>"
export ARBITRUM_MAINNET_KEYS="<private keys for funding wallet in arbitrum mainnet>" # optional if you want to use EVM_KEYS for the Arbitrum Mainnet network

# Polygon Mainnet
export POLYGON_MAINNET_URLS="<wss for polygon mainnet network>"
export POLYGON_MAINNET_HTTP_URLS="<http for polygon mainnet network>"
export POLYGON_MAINNET_KEYS="<private keys for funding wallet in polygon mainnet>" # optional if you want to use EVM_KEYS for the Polygon Mainnet network

# Optimism Mainnet
export OPTIMISM_MAINNET_URLS="<wss for optimism mainnet network>"
export OPTIMISM_MAINNET_HTTP_URLS="<http for optimism mainnet network>"
export OPTIMISM_MAINNET_KEYS="<private keys for funding wallet in optimism mainnet>" # optional if you want to use EVM_KEYS for the Optimism Mainnet network

# Binance Mainnet
export BSC_MAINNET_URLS="<wss for binance mainnet network>"
export BSC_MAINNET_HTTP_URLS="<http for binance mainnet network>"
export BSC_MAINNET_KEYS="<private keys for funding wallet in binance mainnet>" # optional if you want to use EVM_KEYS for the Binance Mainnet network

# Base Mainnet
export BASE_MAINNET_URLS="<wss for base mainnet network>"
export BASE_MAINNET_HTTP_URLS="<http for base mainnet network>"
export BASE_MAINNET_KEYS="<private keys for funding wallet in base mainnet>" # optional if you want to use EVM_KEYS for the base mainnet network


# if you want to send loki logs to a loki instance for populating dashboards from load test result, please provide the following values
export TEST_LOKI_TENANT_ID="<tenant id for loki>"
export TEST_LOKI_URL="<url for loki>"

export LOKI_TENANT_ID="<tenant id for loki>"
export LOKI_URL="<url for loki>"
