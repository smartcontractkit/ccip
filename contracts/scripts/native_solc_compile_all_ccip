#!/usr/bin/env bash

set -e

SOLC_VERSION="0.8.19"
OPTIMIZE_RUNS=26000


SCRIPTPATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
python3 -m pip install --require-hashes -r $SCRIPTPATH/requirements.txt
solc-select install $SOLC_VERSION
solc-select use $SOLC_VERSION
export SOLC_VERSION=$SOLC_VERSION

ROOT="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; cd ../../ && pwd -P )"

compileContract () {
  solc --overwrite --optimize --optimize-runs $OPTIMIZE_RUNS --metadata-hash none \
      -o $ROOT/contracts/solc/v$SOLC_VERSION \
      --abi --bin --allow-paths $ROOT/contracts/src/v0.8 \
      $ROOT/contracts/src/v0.8/$1
}

compileContract ccip/Router.sol
compileContract ccip/onRamp/EVM2EVMOnRamp.sol
compileContract ccip/CommitStore.sol
compileContract ccip/offRamp/EVM2EVMOffRamp.sol
compileContract ccip/ARM.sol
compileContract ccip/ARMProxy.sol
compileContract ccip/PriceRegistry.sol
compileContract ccip/pools/LockReleaseTokenPool.sol
compileContract ccip/pools/BurnMintTokenPool.sol
compileContract shared/token/ERC677/BurnMintERC677.sol
compileContract ccip/applications/PingPongDemo.sol

# Test helpers
compileContract ccip/test/helpers/BurnMintERC677Helper.sol
compileContract ccip/test/helpers/CommitStoreHelper.sol
compileContract ccip/test/helpers/EVM2EVMOffRampHelper.sol
compileContract ccip/test/helpers/CustomTokenPool.sol
compileContract ccip/test/helpers/receivers/MaybeRevertMessageReceiver.sol
compileContract ccip/test/mocks/MockARM.sol
compileContract ccip/test/WETH9.sol

# Customer contracts
compileContract ccip/pools/USDC/USDCTokenPool.sol

