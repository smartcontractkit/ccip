# override resources for keys "chainlink", "db", or "geth" if needed
#  resources:
#    requests:
#      cpu: 350m
#      memory: 1024Mi
#    limits:
#      cpu: 350m
#      memory: 1024Mi
# images can be overriden for the same keys:
#   image: ethereum/client-go
#   version: stable
chainlink:
  podSecurityContext:
    fsGroup: 14933
  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 14933
    runAsGroup: 14933
  web_port: 6688
  p2p_port: 6690
  nodes:
    - name: node-1
      image: "public.ecr.aws/chainlink/chainlink:latest"
      # default resources are 300m/1Gi
      # first node need more resources to build faster inside container
      # at least 2Gi of memory is required otherwise build will fail (OOM)
      resources:
        requests:
          cpu: 2000m
          memory: 2048Mi
        limits:
          cpu: 2000m
          memory: 2048Mi
    # override default config per node
    # for example, use OCRv2 P2P setup, the whole config
    #      toml: |
    #        RootDir = './clroot'
    #        [Log]
    #        JSONConsole = true
    #        Level = 'debug'
    #        [WebServer]
    #        AllowOrigins = '*'
    #        SecureCookies = false
    #        SessionTimeout = '999h0m0s'
    #        [OCR2]
    #        Enabled = true
    #        [P2P]
    #        [P2P.V2]
    #        Enabled = false
    #        AnnounceAddresses = []
    #        DefaultBootstrappers = []
    #        DeltaDial = '15s'
    #        DeltaReconcile = '1m0s'
    #        ListenAddresses = []
    #        [[EVM]]
    #        ChainID = '1337'
    #        MinContractPayment = '0'
    #        [[EVM.Nodes]]
    #        Name = 'node-0'
    #        WSURL = 'ws://geth:8546'
    #        HTTPURL = 'http://geth:8544'
    #        [WebServer.TLS]
    #        HTTPSPort = 0
    # or use overridesToml to override some part of configuration
    #      overridesToml: |
    - name: node-2
    - name: node-3
    - name: node-4
    - name: node-5
    - name: node-6
  resources:
    requests:
      cpu: 350m
      memory: 1024Mi
    limits:
      cpu: 350m
      memory: 1024Mi

# each CL node have a dedicated PostgreSQL 11.15
# use StatefulSet by setting:
#
# stateful: true
# capacity 10Gi
#
# if you are running long tests
db:
  podSecurityContext:
    fsGroup: 999
  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 999
    runAsGroup: 999
  stateful: false
  image: "postgres:15.6"
  resources:
    requests:
      cpu: 1
      memory: 1024Mi
    limits:
      cpu: 1
      memory: 1024Mi
# default cluster shipped with latest Geth ( dev mode by default )
geth:
  podSecurityContext:
    fsGroup: 999
  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 999
    runAsGroup: 999
  version: v1.12.0
  wsrpc-port: 8546
  httprpc-port: 8544
  blocktime: 1
  chains:
    - networkId: 1337
    # use to inject custom configuration for each chain, e.g. GasEstimator
    # - customEVMConfigToml: |
    #     [EVM.GasEstimator]
    #     PriceMax = '200 gwei'
    #     LimitDefault = 6000000
    #     FeeCapDefault = '200 gwei'
    #     [EVM.GasEstimator.BlockHistory]
    #     BlockHistorySize = 200
    #     EIP1559FeeCapBufferBlocks = 0
    - networkId: 2337
  resources:
    requests:
      cpu: 1
      memory: 1024Mi
    limits:
      cpu: 1
      memory: 1024Mi

ccip:
  ccipScriptsImage: ccip-scripts-mage:image-tag
  chains:
    - NetworkId: 1337
      WalletKey: 59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d
      DeployLink: false
      DeployWETH: false
      ChainConfig:
        EvmChainId: 1337
        GasSettings:
          EIP1559: true
          GasTipCap: 1000000000
        SupportedTokens:
          ChainLink Token:
            ChainId: 1337
            Token: "0x5fbdb2315678afecb367f032d93f642f64180aa3"
            Pool: "0xa513e6e4b8f2a923d98304ec87f64353c4d5c853"
            TokenPriceType: "TokenPrices"
            Price: 10000000000000000000
            Aggregator: "0x0000000000000000000000000000000000000000"
            TokenPoolType: "lockRelease"
          WETH:
            ChainId: 1337
            Token: "0xcf7ed3acca5a467e9e704c703e8d87f634fb0fc9"
            Pool: "0x0000000000000000000000000000000000000000"
            TokenPriceType: "TokenPrices"
            Price: 1.8e+21
            Aggregator: "0x0000000000000000000000000000000000000000"
            TokenPoolType: "feeTokenOnly"
        Router: "0x0165878a594ca255338adfa4d48449f69242eb8f"
        ARM: "0xdc64a140aa3e981100a9beca4e685f962f0cf6c9"
        ARMProxy: "0x5fc8d32690cc91d4c39d9d3abcbd16989f875707"
        PriceRegistry: "0x8a791620dd6260079bf849dc5567adc3f2fdc318"
        DeploySettings:
          DeployedAtBlock: 478
        TunableChainValues:
          FinalityDepth: 1
          OptimisticConfirmations: 1
          BatchGasLimit: 7000000
          RelativeBoostPerWaitHour: 2400
          FeeUpdateHeartBeat: "24h0m0s"
          FeeUpdateDeviationPPB: 100000000
          MaxGasPrice: 1000000000000
          InflightCacheExpiry: "3m0s"
          RootSnoozeTime: "5m0s"
    - NetworkId: 2337
      WalletKey: "59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"
      DeployLink: false
      DeployWETH: false
      ChainConfig:
        EvmChainId: 2337
        GasSettings:
          EIP1559: true
          GasTipCap: 1000000000
        SupportedTokens:
          ChainLink Token:
            ChainId: 2337
            Token: "0x8464135c8f25da09e49bc8782676a84730c318bc"
            Pool: "0x1275d096b9dbf2347bd2a131fb6bdab0b4882487"
            TokenPriceType: "TokenPrices"
            Price: 10000000000000000000
            Aggregator: "0x0000000000000000000000000000000000000000"
            TokenPoolType: "lockRelease"
          WETH:
            ChainId: 2337
            Token: "0x712516e61c8b383df4a63cfe83d7701bce54b03e"
            Pool: "0x0000000000000000000000000000000000000000"
            TokenPriceType: "TokenPrices"
            Price: 1.8e+21
            Aggregator: "0x0000000000000000000000000000000000000000"
            TokenPoolType: "feeTokenOnly"
        Router: "0xc6ba8c3233ecf65b761049ef63466945c362edd2"
        ARM: "0xbcf26943c0197d2ee0e5d05c716be60cc2761508"
        ARMProxy: "0x59f2f1fcfe2474fd5f0b9ba1e73ca90b143eb8d0"
        PriceRegistry: "0x0b48af34f4c854f5ae1a3d587da471fea45bad52"
        DeploySettings:
          DeployedAtBlock: 479
        TunableChainValues:
          FinalityDepth: 1
          OptimisticConfirmations: 1
          BatchGasLimit: 7000000
          RelativeBoostPerWaitHour: 2400
          FeeUpdateHeartBeat: "24h0m0s"
          FeeUpdateDeviationPPB: 100000000
          MaxGasPrice: 1000000000000
          InflightCacheExpiry: "3m0s"
          RootSnoozeTime: "5m0s"
  LaneDeploySettings:
    geth_1337,geth_2337:
      DeployLane: false
      DeployPingPongDapp: false
  CCIPLaneConfigs:
    geth_1337:
      geth_2337:
        OnRamp: "0x610178da211fef7d417bc0e6fed39f05609ad788"
        OffRamp: "0x0b306bf915c4d645ff596e518faf3f9669b97016"
        CommitStore: "0x0dcd1bf9a1b36ce34237eeafef220932846bcd82"
        PingPongDapp: "0x68b1d87f95878fe05b998f19b66f4baba5de1aed"
        DeploySettings:
          DeployedAtBlock: 478
    geth_2337:
      geth_1337:
        OnRamp: "0x0f5d1ef48f12b6f691401bfe88c2037c690a6afe"
        OffRamp: "0x381445710b5e73d34af196c53a3d5cda58edbf7a"
        CommitStore: "0x2de080e97b0cae9825375d31f5d0ed5751fdf16d"
        PingPongDapp: "0x0d4ff719551e23185aeb16ffbf2abebb90635942"
        DeploySettings:
          DeployedAtBlock: 479



# mockserver is https://www.mock-server.com/where/kubernetes.html
# used to stub External Adapters
mockserver:
  enabled: true
  releasenameOverride: mockserver
  service:
    type: ClusterIP
  app:
    runAsUser: 999
    readOnlyRootFilesystem: false
  port: 1080
  resources:
    requests:
      cpu: 1
      memory: 1024Mi
    limits:
      cpu: 1
      memory: 1024Mi
opentelemetry-collector:
  enabled: true
  mode: deployment
  image:
    repository: otel/opentelemetry-collector
    tag: 0.95.0
  command:
    name: otelcol
  extraVolumes:
    - name: trace-data
      emptyDir: {}
  extraVolumeMounts:
    - name: trace-data
      mountPath: /tracing
  podSecurityContext:
    fsGroup: 10001
  securityContext:
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:4317"
          http:
            endpoint: "0.0.0.0:3100"
    exporters:
      file:
        path: /tracing/trace-data.json
      otlp:
        endpoint: tempo:4317
        tls:
          insecure: true
    service:
      telemetry:
        logs:
          level: "debug"
      pipelines:
        traces:
          receivers: [otlp]
          exporters: [file, otlp]

tempo:
  enabled: true
  image:
    tag: "1.7.2"
  server:
    http_listen_port: 3200
  # default storage path: /var/tempo/
  readinessProbe:
    httpGet:
      path: /ready
      port: 3200
    initialDelaySeconds: 10
    periodSeconds: 5
  livenessProbe:
    httpGet:
      path: /ready
      port: 3200
    initialDelaySeconds: 20
    periodSeconds: 10
  securityContext:
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001
  tempo:
    storage:
      trace:
        backend: local # backend configuration to use
        wal:
          path: /tmp/tempo/wal # where to store the the wal locally
        local:
          path: /tmp/tempo/blocks

grafana:
  enabled: true
  image:
    tag: 7.3.2
  rbac:
    namespaced: true
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Tempo
          type: tempo
          access: proxy
          orgId: 1
          url: http://tempo:3200
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
          uid: tempo
          jsonData:
            httpMethod: GET
            serviceMap:
              datasourceUid: prometheus
  env:
    GF_AUTH_ANONYMOUS_ENABLED: "true"
    GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    GF_AUTH_DISABLE_LOGIN_FORM: "true"
    GF_FEATURE_TOGGLES_ENABLE: "traceqlEditor"

ingress:
  enabled: false
  annotations: {}
  ingressClassName: alb
  baseDomain: "example.com"
  hosts:
    - host: chainlink-node-1.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: chainlink-node-1
                port:
                  number: 6688
    - host: chainlink-node-2.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: chainlink-node-2
                port:
                  number: 6688
    - host: chainlink-node-3.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: chainlink-node-3
                port:
                  number: 6688
    - host: chainlink-node-4.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: chainlink-node-4
                port:
                  number: 6688
    - host: chainlink-node-5.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: chainlink-node-5
                port:
                  number: 6688
    - host: chainlink-node-6.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: chainlink-node-6
                port:
                  number: 6688
    - host: chainlink-geth-http.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: geth
                port:
                  number: 8544
    - host: chainlink-geth-ws.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: geth
                port:
                  number: 8546
    - host: chainlink-mockserver.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: mockserver
                port:
                  number: 1080
# monitoring.coreos.com/v1 PodMonitor for each node
prometheusMonitor: true

# deployment placement, standard helm stuff
podAnnotations:
nodeSelector:
tolerations:
affinity:

networkPolicies:
  enabled: true
  customPolicies:
    grafanaToTempoEgress:
      podSelector:
        matchLabels:
          app: grafana
      egress:
        - to:
            - podSelector:
                matchLabels:
                  app: tempo
          ports:
            - protocol: TCP
              port: 3100
    tempoIngressFromGrafana:
      podSelector:
        matchLabels:
          app: tempo
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: grafana
          ports:
            - protocol: TCP
              port: 3100
    chainlinkToOtelCollectorEgress:
      podSelector:
        matchLabels:
          app: chainlink
      egress:
        - to:
            - podSelector:
                matchLabels:
                  app: otel-collector
          ports:
            - protocol: TCP
              port: 4317
    otelCollectorToTempoEgress:
      podSelector:
        matchLabels:
          app: otel-collector
      egress:
        - to:
            - podSelector:
                matchLabels:
                  app: tempo
          ports:
            - protocol: TCP
              port: 3100

# Configure the default network policy.
networkPolicyDefault:
  ingress:
    allowCustomCidrs: false
    # String of comma separated CIDRs
    customCidrs: null
    # Example:
    # customCidrs: "10.0.0.0/16,192.168.0.1/24"
